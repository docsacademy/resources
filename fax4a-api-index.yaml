openapi: 3.0.3
info:
  title: Faxolution for Applications (Fax4A) REST API
  version: v1
  description: >
    Retarus' Faxolution for Applications webservice facilitates automation of

    the fax transmission process. In addition, it also allows you to monitor

    the status of a sent fax and delete archived reports. The Webservice

    communicates via REST 1.0 (JSON). The programming language with which the

    Webservice client is implemented is not restricted by the Webservice itself.


    Fax transmission is generally divided into the following steps:


    * Create a fax job and send it to the webservice


    then either


    * Retrieve completed fax jobs

      GET /{custNr}/fax/reports
    * Retrieve the status details for the completed jobs individually or in bulk

      GET /{custNr}/fax/reports/{jobId} or POST /{custNr}/fax/reports
    * Delete the retrieved jobs individually or in bulk

      DELETE /{custNr}/fax/reports/{jobId} or POST /{custNr}/fax/reports

    or


    * Receive the fax job status per HTTP push and/or email status Report


    Fax job data will be automatically deleted after the configured retention
    time.


    For highest process safety standards, we operate two high availability (HA)
    regions, where data centers are clustered. This is how the HA regions are
    composed:


    **Germany**  

    HA region DE, including these data centers:

    * DE1: DC in Frankfurt

    * DE2: DC in Munich


    **United States**  

    HA region US, including these data centers:

    * US1: DC Ashburn

    * US2: DC Secaucus


    Please see the individual operations for details on how to work with HA
    settings.


    To obtain a test account for this service or any of our other fax services,
    please contact Retarus.
  contact:
    name: Retarus
    url: https://www.retarus.com/
    email: info@retarus.com
  termsOfService: https://www.retarus.com/us/legal-disclaimer/
servers:
  - url: https://faxws.de1.retarus.com/rest/v1
    description: Retarus data center in Germany
  - url: https://faxws.de2.retarus.com/rest/v1
    description: Retarus data center in Germany
  - url: https://faxws-ha.de.retarus.com/rest/v1
    description: High availability URL for German data centers
  - url: https://faxws.us1.retarus.com/rest/v1
    description: Retarus data center in USA
  - url: https://faxws.us2.retarus.com/rest/v1
    description: Retarus data center in USA
  - url: https://faxws-ha.us.retarus.com/rest/v1
    description: High availability URL for US data centers
  - url: https://faxws.ch1.retarus.com/rest/v1
    description: Retarus data center in Switzerland
  - url: https://faxws.sg1.retarus.com/rest/v1
    description: Retarus data center in Singapore
security:
  - httpBasicAuth: []
tags:
  - name: Fax jobs
    description: Send faxes
paths:
  /{custNr}/fax:
    post:
      tags:
        - Fax jobs
      summary: Send a fax
      description: >
        This method is used to prepare fax jobs to be transferred for
        processing. If a valid FaxJobRequest has been received by the
        Webservice, the Webservice sends a Job ID back that must be specified by
        the client when querying the job status.
      operationId: sendJobRequest
      parameters:
        - name: custNr
          in: path
          description: Your Retarus Customer Number (e.g. 99999TE).
          required: true
          schema:
            type: string
      requestBody:
        description: Request parameters as a FaxJobRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaxJobRequest'
            examples:
              onedocument:
                $ref: '#/components/examples/FaxJobRequestOneDocument'
              coverpage:
                $ref: '#/components/examples/FaxJobRequestJustCoverPage'
              textdocument:
                $ref: '#/components/examples/FaxJobRequestTextDocument'
              pdffromurl:
                $ref: '#/components/examples/FaxJobRequestGetPDFFromURL'
              complete:
                $ref: '#/components/examples/FaxJobRequestComplete'
      responses:
        '200':
          description: Fax job submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxJobResponse'
        '400':
          description: Invalid or incomplete job request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: >-
                  Validation of job request failed: 'No number available for
                  rcpt FNLAJR3BK80D8LLWADCPYL'
        '401':
          description: Authenication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseAuthenication'
  /{custNr}/fax/reports/{jobId}:
    get:
      tags:
        - Fax reports
      summary: Fetch the status report for a single job
      description: >
        With the assistance of this URL resource, a status report for a fax job

        can be requested by jobId.


        A job's status can be queried until its report data is deleted. You can

        initiate deletion of the data by calling `deleteStatusReport`,

        and in any case the data will be automatically be deleted upon the

        expiration of the configurable time frame (by default 30 days).


        **Please note**: If you sent the fax job requests via a high
        availability URL,

        you have to poll the status from both included data centers. E.g., US1
        and

        US2 in case of the US high availability URL. Please do not poll statuses
        directly 

        from an HA URL but use the specific ones for the data centers.
      operationId: getStatusReport
      parameters:
        - name: custNr
          in: path
          description: Customer Number
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fax job status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxReport'
        '401':
          description: Authenication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseAuthenication'
        '404':
          description: Status report not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: No reports available; Job IDs {FJL8LN75OO01L0D15QUN1T}
    delete:
      tags:
        - Fax reports
      summary: Delete the status report for a single job
      description: >
        Deletes the status report for a single job. Returns the Job ID."


        **Please note**: If you sent the fax job requests via a high
        availability URL,

        you have to send a delete request to both included data centers. Else,
        it will 

        be likely that the job was not processed in the data center you
        referenced and

        hence cannot be deleted there. Please do not send a delete request
        directly to 

        an HA URL but use the specific ones for the data centers.
      operationId: deleteStatusReport
      parameters:
        - name: custNr
          in: path
          description: Customer Number
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status report deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeleteReport'
        '400':
          description: Status report not available
  /{custNr}/fax/reports:
    get:
      tags:
        - Fax reports
      summary: Fetch available status reports for this account
      description: >
        This URL returns a list of available status reports for completed fax

        jobs for the current account.


        Status reports are available for up to 30 days or until deleted.


        IMPORTANT: The results are limited to the oldes 1000 entries. It is
        recommended to

        delete the status reports after fetching them in order to retrieve the

        following ones.


        **Please note**: If you sent the fax job requests via a high
        availability URL,

        you have to poll the status from both included data centers. E.g., US1
        and

        US2 in case of the US high availability URL. Please do not poll statuses
        directly 

        from an HA URL but use the specific ones for the data centers.
      operationId: getAllStatusReports
      parameters:
        - name: custNr
          in: path
          description: Customer Number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status reports delivered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaxReports'
    post:
      tags:
        - Fax reports
      summary: Perform bulk operations on the status reports
      operationId: bulkStatusReports
      description: >
        It is possible to perform bulk operations on the status reports through
        a

        POST on the `/{custNr}/fax/reports` endpoint. The required parameters
        are:

          * the type of action to be performed
          * A list of Job IDs on which the operation should be performed

        Status reports are available for up to 30 days or until deleted.


        The maximum number of jobs per POST request is set to 1000.


        **Please note**: If you sent the fax job requests via a high
        availability URL,

        you have to send a delete request or a status poll request to both
        included data 

        centers. Else, it will be likely that the job was not processed in the
        data center 

        you referenced and hence cannot be deleted or no status is available
        there. Please 

        do not send a request directly to an HA URL but use the specific ones
        for the data centers.
      parameters:
        - name: custNr
          in: path
          description: Customer Number
          required: true
          schema:
            type: string
      requestBody:
        description: |
          Array of jobIds to delete from the API.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkJobReportsRequestBody'
            examples:
              getStatus:
                $ref: '#/components/examples/BulkJobStatusReportGetRequest'
              Delete:
                $ref: '#/components/examples/BulkJobStatusReportDeleteRequest'
      responses:
        '200':
          description: >
            Depending on the request type, this returns a `reports` item
            containing either:

              * an array of `Fax Report` items for the bulk GET (same as `getAllStatusReports`).
              * an array of `Job Delete Report` items for the bulk DELETE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkJobReportResponseBody'
    delete:
      tags:
        - Fax reports
      summary: Delete the oldest status reports for this account
      description: >
        Deletes up to 1000 status reports for completed fax jobs for the current

        account, starting from the oldest ones. It returns the jobIds of deleted

        job reports.


        IMPORTANT: In case there are more than 1000 completed job reports,
        multiple calls

        of this method might be needed to delete them all.


        **Please note**: If you sent the fax job requests via a high
        availability URL,

        you have to send a delete request to both included data centers. Else,
        it will 

        be likely that the job was not processed in the data center you
        referenced and

        hence cannot be deleted there. Please do not send a delete request
        directly to 

        an HA URL but use the specific ones for the data centers.
      operationId: deleteOldestStatusReports
      parameters:
        - name: custNr
          in: path
          description: Customer Number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status reports deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStatusReportsResponse'
components:
  securitySchemes:
    httpBasicAuth:
      type: http
      scheme: basic
      description: >
        Each HTTP Request must be authenticated by Basic Authorization.


        ```

        Authorization: Basic Base64Encoded(username:password)

        ```

        Where `Base64Encoded(username:password)` is an actual Base64 encoded
        string of the `username:password`.


        *Example*:

        username: John

        password: secret

        Base64-encoding of `John:secret` is `Sm9objpzZWNyZXQ=`.


        ```

        …

        Authorization: Basic Sm9objpzZWNyZXQ=

        …

        ```


        Retarus can configure multiple forms of access (Login IDs) for the
        Webservice that can be managed via the Retarus

        EAS Portal. Multiple processes can be operated concurrently by the
        Webservice using multiple Login IDs, making

        it possible to have a configuration saved for each process.


        The job and report data for one Login ID are not viewable or available
        in the other access options, which means

        that a fax job’s status report can only be requested or deleted under
        the Login ID used to create it.


        As an additional layer of security it is possible to restrict access for
        each Login ID to a pre-defined

        list of IP addresses and/or subnets (IP address whitelisting).

        If an account is so configured, all requests coming from IP addresses
        which are not on the list will be rejected.

        The configuration of IP address whitelisting is performed in the EAS
        portal.
  schemas:
    FaxJobRequest:
      type: object
      required:
        - recipients
      properties:
        reference:
          $ref: '#/components/schemas/Reference'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/FaxRecipient'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentWithData'
        transportOptions:
          $ref: '#/components/schemas/TransportOptions'
        renderingOptions:
          $ref: '#/components/schemas/RenderingOptions'
        statusReportOptions:
          $ref: '#/components/schemas/StatusReportOptions'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: Fax Job Request
    Reference:
      type: object
      properties:
        customerDefinedId:
          type: string
          description: Freely-defined ID string (max. 256 characters).
          example: 2022-04-7T11:04:37.057Z_customerDefinedId
        billingCode:
          type: string
          description: >-
            Information on the cost center; format is arbitrary (max. 80
            characters).
          example: 2022-04-7T11:04:37.057Z_billingCode
        billingInfo:
          type: string
          description: >-
            Additional data for internal customer accounting (max. 80
            characters).
          example: 2022-04-7T11:04:37.057Z_billingInfo
      title: Reference
    ErrorResponse:
      properties:
        code:
          type: integer
        message:
          type: string
    ErrorResponseAuthenication:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 401
        message: Authenication failed
    BulkJobReportsRequestBody:
      type: object
      description: Body of the request for bulk operations on the job reports
      required:
        - action
        - jobIds
      properties:
        action:
          type: string
          description: |
            Defines the action to be performed on all jobs whose
            Job ID is provided in the `jobIds` list

            Possible options are:

            * DELETE: Bulk delete the requested jobs
            * GET: Bulk get the requested jobs

            Both options are case insensitive.
        jobIds:
          type: array
          description: List of Job IDs to be processed in bulk
          items:
            type: string
    BulkJobReportResponseBody:
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/BulkJobReportResponseBodyItem'
      example:
        value:
          reports:
            - jobId: FJJ5Y09UM505ZZBIELCRYC
              deleted: true
            - jobId: FJJ5WA23UO05ZZBIEL0JY5
              deleted: true
            - jobId: FJJ5WA0FWM05ZZBIELZPE4
              deleted: false
              reason: NOT_FOUND
            - jobId: FJJ5Y07H3805ZZBIELBAPL
              deleted: true
            - jobId: FJJ5WA25VB0BRN8TPSGGVY
              deleted: false
              reason: INTERNAL_ERROR
            - jobId: FJJ5WA253505ZZBIELEKRC
              deleted: true
            - jobId: FJJ5WA24GI0BRN8TPSWAVM
              deleted: true
    BulkJobReportResponseBodyItem:
      type: object
      required:
        - jobId
      properties:
        jobId:
          type: string
          description: The Job ID.
        recipientStatus:
          type: array
          items:
            $ref: '#/components/schemas/FaxRecipientWithStatus'
        pages:
          type: integer
          description: >
            Number of pages in the fax. Only present for responses to a bulk
            GET.
        reference:
          $ref: '#/components/schemas/Reference'
        deleted:
          type: boolean
          description: |
            Information whether the job report could be deleted.

            Only present for responses to a bulk DELETE.
        reason:
          type: boolean
          description: |
            Missing if deletion was successful, otherwise one of the following
            reason messages is returned:

            * NOT_FOUND: No report exists for the given job id.
            * INTERNAL_ERROR: Unspecified server-side error.

            Only present for responses to a bulk DELETE.
      title: Bulk Job Reports Response
    FaxRecipient:
      type: object
      description: >
        The number where the fax was sent to. If a fax can be successfully sent
        to that number, the transmission to the respective recipient is
        completed and considered successful. The destination number which
        received the fax will be indicated in the report data for each recipient
        under RecipientStatus -> sentToNumber.
      required:
        - number
      properties:
        number:
          type: string
          description: Dialed number (international format, e.g., +12015551000).
          example: '0012012051598'
        properties:
          type: array
          description: Personalized data for the cover page.
          items:
            $ref: '#/components/schemas/RecipientProperty'
      title: Fax Recipient
    RecipientProperty:
      type: object
      description: >
        A cover page can be personalized for each individual recipient and then
        attached to the front of each fax document.


        This object allows specifying a value for each of the keys in the
        template.


        See \<\<common-fax4ba-cover-page-personalization\>\> for additional
        information.
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Name of the key.
          example: key123
        value:
          type: string
          description: The value assigned to the key.
          example: value123
      title: Recipient Property
    DocumentWithData:
      type: object
      description: >
        data and additional information on sent documents; if there is no
        document data and no cover page, the Webservice will not accept the job.


        *Please note*: either `reference` or `data` can be used in a single
        document, but not both at the same time.
      required:
        - name
      properties:
        name:
          type: string
          description: >
            Document file name; the file extension is important for determining
            the file type, e.g., `Invoice-2017-01.pdf`. **Please note**: The
            maximum possible length of a file name is 32 characters. Allowed
            characters are: `a-zA-Z0-9-_.` , and no whitespaces, slashes, or
            other special characters are permitted.
          example: test-document-inline-byte-array.txt
        charset:
          type: string
          description: |
            Character encoding of plain text documents (*.txt). Possible values:

            * US-ASCII
            * UTF-8
            * UTF-16
            * UTF-16BE
            * UTF-16LE
            * ISO-8859-1
            * Windows-1252
          default: UTF-8
        reference:
          type: string
          nullable: true
          description: An URL pointing to the document to be transmitted.
          example: http://mydomain.retarus.com/my-path/mydocument.pdf
        data:
          type: string
          nullable: true
          description: >-
            base64 string with data, if no reference is provided. If both are
            provided, the reference data (see above) is used.
          example: >-
            SGVsbG8sIHRoaXMgaXMgYSB0ZXN0aW5nIGRvY3VtZW50IGJvZHkgY3JlYXRlZCBmb3IgOTk5OTlURQ==
      title: Document With Data
    TransportOptions:
      type: object
      description: Contains information on the transmission of the fax.
      properties:
        csid:
          type: string
          description: The sender ID the received fax was sent from (max. 20 characters).
          example: test-csid
        isExpress:
          type: boolean
          description: Flag for transmissions sent express.
        isBlacklistEnabled:
          type: boolean
          description: |
            Flag for the use of the Robinson List (only for numbers in Germany),
            ECOFAX (for numbers in France), or Retarus' own blacklist.
      title: Transport Options
    RenderingOptions:
      type: object
      description: Contains instructions for the rendering of the fax.
      required:
        - paperFormat
      properties:
        paperFormat:
          type: string
          nullable: true
          description: |
            The size of the paper. Possible options are:

            * A4
            * LETTER
        resolution:
          type: string
          description: |
            The fax's resolution. Possible values are:

              * LOW
              * HIGH
        coverpageTemplate:
          type: string
          description: >-
            The name of the cover page's template; e.g.,
            coverpage-default.ftl.html.
          example: coverpage-default.ftl.html
        overlay:
          $ref: '#/components/schemas/Overlay'
        header:
          type: string
          description: |
            the content of the header, including control characters.
          example: >-
            %tz=CEST Testfax: CSID: %C Recipient number: %# Date: %d.%m.%Y %H:%M
            %z
      title: Rendering Options
    Overlay:
      type: object
      nullable: true
      description: >
        Settings for the overlay (e.g., stationery). A overlay (e.g., with
        letter

        header and footer) can be applied to all or specific pages in the fax.
        It 

        consists of a one-page, black-and-white TIF image document. In order to 

        use an overlay, it must be deployed to the customer's account by a
        Retarus 

        technician. The customer can provide a document in various formats eg
        PDF,

        which Retarus experts will then convert to a TIF image and deploy it
        using

        a agreed upon name. 
      required:
        - name
        - mode
      properties:
        name:
          type: string
          description: >
            The overlay name excluding the TIF file extension and without and
            path information.
          example: LetterHead
        mode:
          type: string
          description: >
            specifies the page in the document where the template (overlay) will
            be applied. Possible values:

              * ALL_PAGES: the overlay is applied to all pages
              * NO_OVERLAY: no overlay is used (returns the same result as if "no overlay" had been specified in the options)
              * FIRST_PAGE: the overlay is applied only to the first page (if you are using a cover  page, it is considered the first page)
              * LAST_PAGE: the overlay is applied only to the last page
              * ALL_BUT_FIRST_PAGE: the overlay is applied to all pages except for the first (if you are using a cover page, the overlay will be applied to all other pages because the cover page is considered the first page)
              * ALL_BUT_LAST_PAGE: the overlay is applied to all pages except the last one
              * ALL_BUT_FIRST_AND_LAST_PAGE: the overlay is applied to all pages except for the first and the last (the cover page is considered the first page if this mode is used)
              * FIRST_FILE: if the faxed document consists of multiple files, the overlay will only be used on the first file's pages (the cover page is considered not to belong to any file and does not an overlay in this mode)
      title: Overlay
    StatusReportOptions:
      type: object
      description: >-
        settings for the status report. Consists of `reportPurgeTs` and
        `reportMail`.
      required:
        - reportPurgeTs
      properties:
        reportPurgeTs:
          type: string
          format: date-time
          description: >-
            Not currently valid. The date after which the status report is no
            longer available. In ISO 8601 format
          example: '2022-11-03T20:14:37.098+02:00'
        reportMail:
          $ref: '#/components/schemas/ReportMail'
        httpStatusPush:
          $ref: '#/components/schemas/HttpStatusPush'
      title: Status Report Options
    ReportMail:
      type: object
      description: >
        In addition to querying via Webservice, it is possible to request
        notification for each fax job as soon as processing is completed. The
        status information can be sent by either HTTP POST or email.

        Separate email addresses can each be specified for delivery and failed
        delivery confirmations. If an email address is deleted for either type
        of confirmation, no notification email will be sent for the confirmation
        type that was removed.

        The report emails' format is specified through a template which is
        filled out with relevant data (Job ID, job status, details on the fax
        recipients). A default template is available for all customers; however,
        you can install a customized template. Templates must be encoded in
        UTF-8 format.

        In addition, it is possible to specify whether the fax image should be
        attached to the report or not and if so in which format
      properties:
        successAddress:
          type: string
          description: >-
            Email address, to which delivery confirmations notifications should
            be sent.
          example: john.doe@retarus.com
        failureAddress:
          type: string
          description: >-
            Email address, to which a notification should be sent when errors
            occur.
          example: jane.doe@retarus.com
        attachedFaxImageMode:
          type: string
          description: >
            Determines when the fax image will be attached to the email.
            Possible values are:

              * NEVER: Never attach the fax image
              * SUCCESS_ONLY: Only attach the fax image in case of successful transmission
              * FAILURE_ONLY: Only attach the fax image in case of failed transmission
              * ALWAYS: Always attach the fax image
          example: SUCCESS_ONLY
          default: NEVER
        attachedFaxImageFormat:
          type: string
          description: >
            Determines when the fax image will be attached to the email. The
            following formats are supported:

              * TIFF: Fax image is attached as TIFF
              * PDF: Fax image is atached as PDF
              * PDF_WITH_OCR: Fax image is ttached as a searchable PDF file. Additional costs may occur
          default: TIFF
      title: Report Mail
    HttpStatusPush:
      type: object
      description: >
        In order to receive notification via HTTP, the JobRequest must contain

        the `httpStatusPush` element. The URL to which the HTTP POST request is

        sent has to be specified.


        Please see \<\<common-fax4ba-http-status-push\>\> for additional
        details.
      required:
        - targetUrl
      properties:
        targetUrl:
          type: string
          description: >-
            The HTTP url to post the fax job status to (webhook). A default URL
            can be configured for the account.
          example: https://retarus.com/test-path/test-target
        principal:
          type: string
          nullable: true
          description: >-
            The user name to authenticate with the status push endpoint, if
            required. When using OAUTH2 this is the client id to obtain access
            tokens.
          example: none
        credentials:
          type: string
          nullable: true
          description: >-
            The password to authenticate with the status push endpoint, if
            required. When using OAUTH2 this is the client secret to obtain
            access tokens.
          example: none
        authMethod:
          type: string
          description: >
            The authentication method for the status push. Supported
            authentication mehods and the corresponding values are:

              * HTTP_BASIC
              * HTTP_DIGEST
              * OAUTH
              * NONE

            In order to use OAUTH2, the authorization server URL must be
            configured in advance for the account.
          enum:
            - HTTP_BASIC
            - HTTP_DIGEST
            - OAUTH2
            - NONE
          default: NONE
      title: Http Status Push
    MetaData:
      type: object
      description: Meta information about the request.
      required:
        - customerReference
      properties:
        customerReference:
          type: string
          description: Information that the customer can use for internal references.
          example: 99999TE
        jobValid:
          $ref: '#/components/schemas/JobValid'
      title: Meta Data
    JobValid:
      type: object
      description: >
        Contains the valid start/end of a fax job (in ISO 8601 format). If this
        data

        is not defined correctly, you will receive a **Job Expiration** error.


        If you want to use the default values, simply ignore this object.
      properties:
        start:
          type: string
          description: >
            Beginning of validity for the job (in ISO 8601 format).

            **Please note:** if this time is not defined correctly, you will
            receive a `Job Expiration` error. By default jobs are immediately
            valid.
          nullable: true
          default: null
        end:
          type: string
          description: >
            End of validity for the job (in ISO 8601 format). **Please note**
            that also durations are supported; the following values are all
            valid expiration times:


            * 2022-10-11T15:50:21.372Z (expiration set to the exact moment
            specified)

            * PT80M  (Expiration set to now + 80 minutes)


            By default jobs expire one month after they begin being valid.

            The value must be one of these choices:
              * string with format "date-time"
              * string with format "duration"
          default: P1M
      title: Job Valid
    FaxJobResponse:
      type: object
      required:
        - jobId
      properties:
        jobId:
          type: string
      title: Fax Job Response
      example:
        jobId: FJKQQUVF1J0IADYARQEXKC
    FaxReport:
      type: object
      required:
        - jobId
        - recipientStatus
        - pages
      properties:
        jobId:
          type: string
          description: The Job ID.
        recipientStatus:
          type: array
          items:
            $ref: '#/components/schemas/FaxRecipientWithStatus'
        pages:
          type: integer
          description: Number of pages in the fax.
        reference:
          $ref: '#/components/schemas/Reference'
      title: Fax Report
      example:
        jobId: FJJ66GHGX105ZZBIELVCN1
        recipientStatus:
          - number: +49 89 1234567-8900
            properties: null
            status: OK
            reason: OK
            sentTs: '2017-08-10T13:05:09Z'
            durationInSecs: 19
            sentToNumber: '00498912345678900'
            remoteCsid: +49/89/1234567-8900
        pages: 1
        reference:
          customerDefinedId: 2017-08-10T13:05:09Z_customerDefinedId
          billingCode: 2017-08-10T13:05:09Z_billingCode
          billingInfo: 2017-08-10T13:05:09Z_billingInfo
    FaxRecipientWithStatus:
      description: Receipient fax status information.
      type: object
      required:
        - durationInSecs
        - number
        - reason
        - status
      properties:
        number:
          type: string
          description: >-
            The fax recipient's primary number (international format, e.g.,
            +49891234678).
        properties:
          type: array
          nullable: true
          description: Personalized data used for the cover page.
          items:
            $ref: '#/components/schemas/RecipientProperty'
        status:
          type: string
          description: Job status. See TBD for more information
        reason:
          type: string
          description: Explanation of the status.
        sentTs:
          type: string
          format: date-time
          description: >-
            Timestamp which indicates when the fax was sent (in ISO 8601
            format).
        durationInSecs:
          type: integer
          description: >-
            Duration of the fax transmission until received by the fax
            recipient.
        sentToNumber:
          type: string
          description: Number to which the fax was sent.
        remoteCsid:
          type: string
          description: Fax ID which identifies the fax recipient.
      title: Fax Recipient With Status
    DeleteStatusReportsResponse:
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/JobDeleteReport'
      example:
        reports:
          - jobId: FJJ5Y09UM505ZZBIELCRYC
            deleted: true
          - jobId: FJJ5WA23UO05ZZBIEL0JY5
            deleted: true
          - jobId: FJJ5WA0FWM05ZZBIELZPE4
            deleted: false
            reason: NOT_FOUND
          - jobId: FJJ5Y07H3805ZZBIELBAPL
            deleted: true
          - jobId: FJJ5WA25VB0BRN8TPSGGVY
            deleted: false
            reason: INTERNAL_ERROR
          - jobId: FJJ5WA253505ZZBIELEKRC
            deleted: true
          - jobId: FJJ5WA24GI0BRN8TPSWAVM
            deleted: true
    JobDeleteReport:
      type: object
      required:
        - jobId
        - deleted
      properties:
        jobId:
          type: string
          nullable: true
          description: The Job ID.
        deleted:
          type: boolean
          description: >
            Returns `true` if the job was successfully deleted, false otherwise.
            If

            absent in the response it means the job was successfully deleted.
        reason:
          type: string
          description: |
            Missing if deletion was successful, otherwise one of the following
            reason messages is returned:

            * NOT_FOUND: No report exists for the given job id.
            * INTERNAL_ERROR: Unspecified server-side error.
          enum:
            - NOT_FOUND
            - INTERNAL_ERROR
      title: Job Delete Report
      example:
        jobId: FJJ66GHGX105ZZBIELVCN1
        deleted: true
    FaxReports:
      type: object
      required:
        - reports
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/FaxReport'
      title: Fax Reports
      example:
        reports:
          - jobId: FJJ5Y09UM505ZZBIELCRYC
            recipientStatus:
              - number: '+498912345678900'
                properties: null
                status: OK
                reason: OK
                sentTs: '2017-08-04T15:09:10Z'
                durationInSecs: 19
                sentToNumber: '00498912345678900'
                remoteCsid: +49/89/1234567-8900
            pages: 1
            reference:
              customerDefinedId: 2017-08-04T15:09:10Z_customerDefinedId
              billingCode: 2017-08-04T15:09:10Z_billingCode
              billingInfo: 2017-08-04T15:09:10Z_billingInfo
          - jobId: FJJ5WA23UO05ZZBIEL0JY5
            recipientStatus:
              - number: '+498912345678901'
                properties: null
                status: OK
                reason: OK
                sentTs: '2017-08-03T10:07:31Z'
                durationInSecs: 21
                sentToNumber: '00498912345678901'
                remoteCsid: Retarus Faxolution
            pages: 2
            reference:
              customerDefinedId: 2017-08-03T10:07:31Z_customerDefinedId
              billingCode: 2017-08-03T10:07:31Z_billingCode
              billingInfo: 2017-08-03T10:07:31Z_billingInfo
  examples:
    FaxJobRequestTextDocument:
      summary: Send an ISO-8859-1 encoded text document
      value:
        recipients:
          - number: '+498900000000'
        documents:
          - name: retarusfaxservices.txt
            charset: ISO-8859-1
            data: >-
              Q2xvdWQgRmF4IFNlcnZpY2VzIGZvciBEaWdpdGFsIFByb2Nlc3NlcwpGYXhpbmcgaXMgYW4gaW50ZWdyYWwgcGFydCBvZiBtYW55IGJ1c2luZXNzIHByb2Nlc3Nlcy4KCkRpZ2l0YWxlcyBGYXggZvxyIGRpZ2l0YWxlIFByb3plc3NlCkZheCBpc3QgaW50ZWdyYWxlciBCZXN0YW5kdGVpbCBzZWhyIHZpZWxlciBCdXNpbmVzcyBQcm96ZXNzZS4KCg==
    FaxJobRequestOneDocument:
      summary: Send a pdf document to a fax number
      value:
        recipients:
          - number: '+498900000000'
        documents:
          - name: faxdocument.pdf
            data: >-
              
    FaxJobRequestJustCoverPage:
      summary: Send a coverpage to a fax number
      value:
        recipients:
          - number: '+498900000000'
            properties:
              - key: FromName
                value: John Doe
              - key: FromCompanyName
                value: Retarus
              - key: FromTelNumber
                value: +49 89 5528-2525
              - key: ToName
                value: Jane Doe
              - key: ToCompanyName
                value: Acme International Ltd.
              - key: ToFaxNum
                value: '+498900000000'
              - key: SubjectTitle
                value: Retarus OpenAPI testfax
              - key: SubjectText
                value: This testfax was sent from Retarus OpenAPI Portal.
        renderingOptions:
          paperFormat: null
          coverpageTemplate: coverpage-default.ftl.html
    FaxJobRequestGetPDFFromURL:
      summary: Send a fax with a PDF located at an URL
      value:
        recipients:
          - number: '+498900000000'
        documents:
          - name: retarusfaxservices.pdf
            reference: >-
              https://assets.retarus.com/wp-content/uploads/2018/02/retarus_use-case_optimized-delivery-processes_en.pdf
    FaxJobRequestComplete:
      summary: Send a fax job using all options
      value:
        reference:
          customerDefinedId: 2022-04-7T11:04:37.057Z_customerDefinedId
          billingCode: 2022-04-7T11:04:37.057Z_billingCode
          billingInfo: 2022-04-7T11:04:37.057Z_billingInfo
        recipients:
          - number: '+12100000000'
            properties:
              - key: ToName
                value: John Doe
        documents:
          - name: retarusfaxservices.html
            reference: https://www.retarus.com/services/fax/
            data: null
        transportOptions:
          csid: test-csid
          isExpress: true
          isBlacklistEnabled: true
        renderingOptions:
          paperFormat: A4
          resolution: HIGH
          coverpageTemplate: coverpage-default.ftl.html
          overlay: LetterHead
          header: >-
            %tz=CEST Testfax: CSID: %C Empfaengernummer: %# Datum: %d.%m.%Y
            %H:%M %z
        statusReportOptions:
          reportPurgeTs: '2022-11-03T20:14:37.098+02:00'
          reportMail:
            successAddress: john.doe@retarus.com
            failureAddress: jane.doe@retarus.com
            attachedFaxImageMode: SUCCESS_ONLY
            attachedFaxImageFormat: TIFF
          httpStatusPush:
            targetUrl: http://retarus.com/test-path/test-target
            principal: null
            credentials: null
            authMethod: NONE
        meta:
          customerReference: 99999TE
          jobValid:
            start: '2022-10-20T15:44:22.349Z'
            end: PT90M
    FaxJobResponse:
      value:
        jobId: FJKQQUVF1J0IADYARQEXKC
    BulkJobStatusReportGetRequest:
      summary: Get the status for multiple fax jobs
      description: Get the status for the specified fax job ids.
      value:
        action: GET
        jobIds:
          - FJJ5Y09UM505ZZBIELCRYC
          - FJJ5WA23UO05ZZBIEL0JY5
          - FJJ5WA0FWM05ZZBIELZPE4
          - FJJ5Y07H3805ZZBIELBAPL
          - FJJ5WA25VB0BRN8TPSGGVY
          - FJJ5WA253505ZZBIELEKRC
          - FJJ5WA24GI0BRN8TPSWAVM
    BulkJobStatusReportDeleteRequest:
      summary: Delete the status for multiple fax jobs
      description: Delete the status for the specified fax job ids.
      value:
        action: DELETE
        jobIds:
          - FJJ5Y09UM505ZZBIELCRYC
          - FJJ5WA23UO05ZZBIEL0JY5
          - FJJ5WA0FWM05ZZBIELZPE4
          - FJJ5Y07H3805ZZBIELBAPL
          - FJJ5WA25VB0BRN8TPSGGVY
          - FJJ5WA253505ZZBIELEKRC
          - FJJ5WA24GI0BRN8TPSWAVM
    BulkJobStatusReportDeleteResponse:
      value:
        reports:
          - jobId: FJJ5Y09UM505ZZBIELCRYC
            deleted: true
          - jobId: FJJ5WA23UO05ZZBIEL0JY5
            deleted: true
          - jobId: FJJ5WA0FWM05ZZBIELZPE4
            deleted: false
            reason: NOT_FOUND
          - jobId: FJJ5Y07H3805ZZBIELBAPL
            deleted: true
          - jobId: FJJ5WA25VB0BRN8TPSGGVY
            deleted: false
            reason: INTERNAL_ERROR
          - jobId: FJJ5WA253505ZZBIELEKRC
            deleted: true
          - jobId: FJJ5WA24GI0BRN8TPSWAVM
            deleted: true
  parameters: {}
